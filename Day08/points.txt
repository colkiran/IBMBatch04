\w		- word		- matches alpha numeric data

\W		- non word	- matches all special characters

\s		- space		- matches spaces

\S		- non space	- matches everything other than spaces

\d		- digits 	- numeric data

\D		- non digit	- nom numeric data

\b		- word boundary	

\B		- non word boundary

\A		- beginning of the string

\Z 		- end of the string

Date
----





























































































































































































































































































































































































































Date
----
dd/mm/yyyy

dd - 01 - 31
mm - 01 - 12
yyyy - 1900+


valid 
-----
dd/mm/yyyy
dd-mm-yyyy

invalid 
--------
dd/mm-yyyy
dd-mm/yyyy


compile 
findall
finditer
sub


write a code get the data 
	before the / 
	between the /
	after the /

from the url.

https://www.google.com/search?h/petsexpert/siamese-cat-price-in-india/blog/macaws-prices-purchase-cost-supplies-food-and-more/mynextpet.in/macaw-parrot-price-in-india/?result.aspx


File Handling
-------------
Text files - ascii format - no need of drivers

Modes of opening a file

r - read mode
-------------
if we open the file in read mode we can do only read operation on the file. If the file is not existing in the given path or the filename or path is misspelt then it raises an exception FileNotFound. This is the default mode of opening the file.

w - write mode
--------------
if we open the file in write mode we can perform only write operation, if the file already existing the it opens the file deletes the old contents and then writes into the file. If the file is not existing the creates a new file and writes into it.


a - append mode
----------------
if the file opened in append mode we can perform only write operation, if the file is already existing then opens the file and appends the new content into the file without disturbing the previous content. If the does not exist then it creates a new file and appends data into it.
 

dynamic mode
------------
move the file handle from one location to another by using seek function

FL.seek(offset, Whence)

offset - no of bytes
whence - Positon 0, 1, 2

0 - BOF

1 - CP

2 - EOF


FL.seek(20, 0) => 20th byte

FL.seek(40, 1) => 60th byte

2500 bytes
FL.seek(30, 2) => 2530  




['empid', 'empname', 'age', 'dept', 'salary']
['501', 'Jack', '28', 'HR', '65000']
['235', 'Jill', '34', 'FIN', '35000']
['150', 'John', '26', 'AC', '25000']
['325', 'Jai', '21', 'DEV', '55000']
['450', 'Guru', '38', 'DEV', '85000']
['182', 'Sita', '32', 'PRC', '75000']
['297', 'Gita', '36', 'SUP', '60000']































